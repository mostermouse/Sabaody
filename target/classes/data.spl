create table employmentinfo(  //사원 정보 등록 테이블
 id varchar2(50) primary key not null,
    division varchar2(20) not null ,
    name varchar2(100) not null,
    department varchar2(60) not null ,
    position varchar2(100) not null,
    attendance_record varchar2(50),
    date_of_joining Date,
    address varchar2(200),
    phone_number varchar2(50),
    email varchar2(100)
);

create table ATTENDANCERECORD  //사원 상세정보 등록 테이블
(
    ID              VARCHAR2(50) not null
        primary key
        constraint FK_EMP_STATUS_ID
            references EMPLOYMENTINFO,
    INPUT_DATE      DATE,
    ATTENDANCE_TYPE VARCHAR2(255),
    START_DATE      DATE,
    END_DATE        DATE,
    ATTENDANCE_DATE VARCHAR2(255),
    AMOUNT          NUMBER,
    SUMMARY         VARCHAR2(255)
);

create table LOGIN
(
    USERID   VARCHAR2(15)  not null
        primary key,
    PASSWORD VARCHAR2(20) not null
);

create table VACATIONINQUIRY   //휴가 조회 테이블
(
    ID                      VARCHAR2(50) not null
        primary key
        constraint FK_VACATION_ID
            references EMPLOYMENTINFO,
    VACATION_ITEMS          VARCHAR2(50),
    VACATION_TYPES          NUMBER,
    USED_VACATION_DAYS      NUMBER,
    REMAINING_VACATION_DAYS NUMBER
);

//휴가 월별 조회
create table kintaimonths(
    id varchar2(50) not null primary key ,
    sum  Number ,
    deduction number
);
ALTER TABLE KINTAIMONTHS
    ADD CONSTRAINT fk_kin_id
        FOREIGN KEY (id)
            REFERENCES ATTENDANCERECORD(ID);

//일용직 관리 테이블
CREATE TABLE daylaborer(
                           ID VARCHAR2(50) not null,
                           project varchar2(50) not null,
                           start_days Date not null,
                           daily_rate number,
                           income_tax number,
                           local_income_tax number,
                           net_pay number,
                           CONSTRAINT PK_daylaborer_ID PRIMARY KEY (ID),
                           CONSTRAINT FK_daylaborer_ID FOREIGN KEY (ID) REFERENCES EMPLOYMENTINFO(id) ON DELETE CASCADE
);


//아이디삭제시 외래 참조되어있는거 연쇄 삭제 시킴

ALTER TABLE ATTENDANCERECORD
    ADD CONSTRAINT FK_EMP_STATUS_ID
        FOREIGN KEY (ID)
            REFERENCES EMPLOYMENTINFO(id)
                ON DELETE CASCADE;

ALTER TABLE VACATIONINQUIRY
    ADD CONSTRAINT FK_VACATION_ID
        FOREIGN KEY (ID)
            REFERENCES EMPLOYMENTINFO(id)
                ON DELETE CASCADE;

ALTER TABLE KINTAIMONTHS
    ADD CONSTRAINT fk_kin_id
        FOREIGN KEY (id)
            REFERENCES ATTENDANCERECORD(ID)
                ON DELETE CASCADE;

----------------------------------------------------------

//근태조회 조인 셀렉트
SELECT ar.inputdate,
       ei.division,
       ei.name,
       ei.department,
       ei.position,
       ar.attendance_type,
       ar.start_date,
       ar.end_date,
       ar.attendance_date,
       ar.amount,
       ar.summary
FROM attendancerecord ar
JOIN employmentinfo ei ON ar.id = ei.id;


//휴가조회 조인 셀렉트
SELECT ei.id, ei.division, ei.name, ei.department, ei.position, ar.vacation_items,
 ar.vacation_types, ar.used_vacation_days, ar.remaining_vacation_days FROM
 vacationinquiry ar JOIN employmentinfo ei ON ar.id = ei.id;

//휴가 월별 조회 셀렉트
select ar.DIVISION , ar.id , ar.name , ar.department , ar.position ,sr.sum , sr.deduction
from EMPLOYMENTINFO ar JOIN kintaimonths sr On ar.ID = sr.ID;

//일용직 월별 조회 셀렉트
SELECT sr.start_days,sr.id, ar.name,ar.DEPARTMENT, sr.project, sr.daily_rate, sr.income_tax, sr.local_income_tax, sr.net_pay FROM EMPLOYMENTINFO ar JOIN DAYLABORER sr ON ar.ID = sr.ID;
